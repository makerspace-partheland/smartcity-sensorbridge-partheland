name: Dependabot Auto-Genehmigung & Auto-Merge (Patch)

on:
  pull_request_target:
    types: [opened, reopened, synchronize, labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  automerge:
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Dependabot Metadaten
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Statuschecks beobachten und auf Erfolg warten
        if: contains(steps.metadata.outputs.update-type, 'version-update:semver-patch') && !contains(steps.metadata.outputs.dependencies, 'homeassistant') && !contains(steps.metadata.outputs.dependencies, 'paho-mqtt') && !contains(steps.metadata.outputs.dependencies, 'aiohttp')
        id: wait-checks
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Warte auf erfolgreichen Abschluss aller Checks..."
          gh pr checks ${{ github.event.pull_request.number }} --watch --interval 30
          
          # Prüfe finalen Status aller Checks
          CHECK_STATUS=$(gh pr checks ${{ github.event.pull_request.number }} --json state --jq '.[] | select(.state != "SUCCESS") | .state' | head -1)
          
          if [ -n "$CHECK_STATUS" ]; then
            echo "Mindestens ein Check ist fehlgeschlagen oder pending. Auto-Merge abgebrochen."
            echo "check_success=false" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "Alle Checks erfolgreich"
            echo "check_success=true" >> $GITHUB_OUTPUT
          fi

      - name: Merge-Status abrufen
        if: contains(steps.metadata.outputs.update-type, 'version-update:semver-patch') && !contains(steps.metadata.outputs.dependencies, 'homeassistant') && !contains(steps.metadata.outputs.dependencies, 'paho-mqtt') && !contains(steps.metadata.outputs.dependencies, 'aiohttp')
        id: pr-state
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          merged=$(gh pr view ${{ github.event.pull_request.number }} --json merged --jq '.merged')
          echo "merged=${merged}" >> "${GITHUB_OUTPUT}"

      - name: PR mergen und Branch löschen
        if: contains(steps.metadata.outputs.update-type, 'version-update:semver-patch') && !contains(steps.metadata.outputs.dependencies, 'homeassistant') && !contains(steps.metadata.outputs.dependencies, 'paho-mqtt') && !contains(steps.metadata.outputs.dependencies, 'aiohttp') && steps.wait-checks.outputs.check_success == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Prüfe ob bereits gemerged
          MERGED=$(gh pr view ${{ github.event.pull_request.number }} --json merged --jq '.merged')
          if [ "$MERGED" = "true" ]; then
            echo "PR bereits gemerged"
            exit 0
          fi
          
          # Merge durchführen
          gh pr merge ${{ github.event.pull_request.number }} \
            --squash \
            --delete-branch \
            --body "Automatisch zusammengeführt nach erfolgreichen Statuschecks." \
            --subject "deps: Dependabot Patch-Update (automatisch)"
